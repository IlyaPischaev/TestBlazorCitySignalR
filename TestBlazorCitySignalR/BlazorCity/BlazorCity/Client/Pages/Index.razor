@page "/"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<div class="container-fluid">
    <div class="row">
        <div class="col">

            <table class="table table-striped">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">Название города</th>
                        <th scope="col">Население</th>
                        <th scope="col">Дата основания</th>
                        <th scope="col"></th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                @foreach (var item in cities)
                {
                    <tbody>
                        <tr>
                            <td>
                                @item.CityName
                            </td>
                            <td>
                                @item.CityPopulation
                            </td>
                            <td>
                                @item.CityDoundationDay.@item.CityDoundationMonth.@item.CityFoundationYear
                            </td>
                            <td>
                                <button class="btn btn-info" @onclick="@(() => EditCity(item.CityId))">Редактировать</button>
                            </td>
                            <td>
                                <button class="btn btn-danger" @onclick="@(() => DeleteCity(item.CityId))">Удалить</button>
                            </td>
                        </tr>
                    </tbody>
                }
            </table>
        </div>
    </div>
</div>

@*
    <h1>Выбор даты</h1>
    <div class="container-fluid">
        <RadzenDatePicker @bind-Value="@value" DateFormat="d" @onchange=@(() => OnChange(value, "DatePicker", "MM/dd/yyyy")) />
    </div>
*@

<h2>Выбор даты1</h2>
<input class="form-control" type="date"
       @bind-value="@value"
       min="1980-01-01" max="@value" />

<button class="btn btn-block" @onclick="@OnChange">Сделать</button>
<input value="@year" />
<input value="@month" />
<input value="@day" />

<h2>Выбор даты2</h2>
<input class="form-control" type="date"
        @bind-value="@dt"
       min="1980-01-01" max="@value" />

@code {
    private List<City> cities = new List<City>();
    private HubConnection hubConnection;

    DateTime? value = DateTime.Now;
    DateTime? dt;
    int? year, month, day;
    string date;

    void OnChange()
    {
        date = value?.ToString("yyyyMMdd");

        if (date == null)
        {
            year = month = day = 0;
        }
        else
        {
            year = Int32.Parse(date.Substring(0, 4));
            month = Int32.Parse(date.Substring(4, 2));
            day = Int32.Parse(date.Substring(6));
        }

        int i = 20140820;
        string time = i.ToString();

        dt = DateTime.ParseExact(time, "yyyyMMdd", null);
    }

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("Here");

        hubConnection = new HubConnectionBuilder()
        .WithUrl(NavigationManager.ToAbsoluteUri("/CityHub"))
        .Build();

        hubConnection.On("RecieveMessage", () =>
        {
            CallLoadData();
            StateHasChanged();
        });

        await hubConnection.StartAsync();
        await LoadData();
    }

    private void CallLoadData()
    {
        Task.Run(async () =>
        {
            await LoadData();
        });
    }

    protected async Task LoadData()
    {
        cities = await Http.GetFromJsonAsync<List<City>>("City");
        StateHasChanged();
    }

    Task Send() => hubConnection.SendAsync("SendMessage");

    public bool IsConnected =>
    hubConnection.State == HubConnectionState.Connected;

    private async Task DeleteCity(int id)
    {
        await Http.DeleteAsync("City/" + id);
        if (IsConnected) await Send();
    }

    private void EditCity(int id)
    {
        NavigationManager.NavigateTo("/editcity/" + id);
    }

    public void Dispose()
    {
        _ = hubConnection.DisposeAsync();
    }
}
